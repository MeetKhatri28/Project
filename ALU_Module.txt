module ALU (
    input [5:0] opcode,
    input [18:0] in1,
    input [18:0] in2,
    output reg [18:0] out,
    output reg zero
);
    always @(*) begin
        case (opcode)
            6'b000000: out = in1 + in2;  // ADD
            6'b000001: out = in1 - in2;  // SUB
            6'b000010: out = in1 * in2;  // MUL
            6'b000011: out = in1 / in2;  // DIV
            6'b000100: out = in1 + 1;    // INC
            6'b000101: out = in1 - 1;    // DEC
            6'b000110: out = in1 & in2;  // AND
            6'b000111: out = in1 | in2;  // OR
            6'b001000: out = in1 ^ in2;  // XOR
            6'b001001: out = ~in1;       // NOT
            default: out = 19'b0;
        endcase

        // Zero flag
        zero = (out == 19'b0);
    end
endmodule
